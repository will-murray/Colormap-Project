import sys

if len(sys.argv) != 3:
    print("usage: python3 analyze_out.py <bam file>.bam <long reads>.fasta \n\n\t(bam file should be generated by blasr)")
    exit(1)
bam_fname = sys.argv[1]
lr_filename = sys.argv[2]


with open(lr_filename, "r") as file:
    total_long_reads = 0
    total_number_bases = 0
    for line in file:
        if line.startswith(">"):
            total_long_reads+=1
        else:
            total_number_bases += len(line)
        




with open(bam_fname,"r") as file:
    next(file) #skip the header
    num_aligned_long_reads = 0
    num_aligned_bases = 0
    num_matched_bases = 0
    total_alignment_len = 0

    for line in file:
        line = line.split(" ")
        start,end = int(line[6]), int(line[7])
        b = end-start
        num_aligned_bases += b
        num_matched_bases += b  * (float(line[5])/100) #number of aligned bases times the pct similarity
        num_aligned_long_reads +=1


pct_bases_aligned = (num_aligned_bases/total_number_bases) * 100
pct_bases_matched = (num_matched_bases/total_number_bases) * 100
average_identity =  (num_matched_bases / num_aligned_bases )*100

print(f"{bam_fname}\t{total_long_reads}\t{num_aligned_long_reads}\t{num_aligned_bases}\t{pct_bases_aligned:.2f}%\t{pct_bases_matched:.2f}%\t{average_identity:.2f}%")


